#!/usr/bin/env python

import os
from distutils.command.build_ext import build_ext as _build_ext
from distutils.core import setup, Extension
from distutils import log


class BuildWebSQL(_build_ext):
    def run(self):
        path = os.path.abspath('extra/mysql')
        log.info("building 'websqlclient' library")
        pwd = os.getcwd()
        temp_dir = os.path.join(self.build_temp, 'websqlclient')
        self.mkpath(temp_dir)
        os.chdir(temp_dir)
        try:
            self.spawn(['cmake', path, '-DDISABLE_SHARED=on'])
            self.spawn(['make'])
        finally:
            os.chdir(pwd)

        self.include_dirs.extend([os.path.join(temp_dir, 'include'), 'extra/mysql/include'])
        self.libraries.append('websqlclient')
        self.library_dirs.append(os.path.join(temp_dir, 'libmysql'))

        zlib_path = os.path.join(temp_dir, 'zlib')
        if os.path.exists(zlib_path):
            self.library_dirs.append(zlib_path)
            self.libraries.append('zlib')

        ssl_path = os.path.join(temp_dir, 'extra', 'yassl')
        if os.path.exists(ssl_path):
            self.library_dirs.extend((ssl_path, os.path.join(ssl_path, 'taocrypt')))
            self.libraries.extend(('yassl', 'taocrypt'))

        self.extensions[0].depends.append(os.path.join(temp_dir, 'libmysql', 'libwebsqlclient.a'))
        in_file = os.path.join(temp_dir, 'include', 'mysqld_error.h')
        out_file = os.path.join(temp_dir, 'py_mysqld_error.c')
        self.make_er(in_file, out_file)
        self.extensions[0].sources.append(out_file)
        super().run()

    @staticmethod
    def make_er(in_file, out_file):
        with open(in_file, 'rb') as mysqld_errors:
            with open(out_file, 'wb') as py_errors:
                py_errors.write(b"/* Autogenerated file, please don't edit */\n")
                py_errors.write(b"#include <mysqld_error.h>\n")
                py_errors.write(b"#define PY_SSIZE_T_CLEAN 1\n#include <Python.h>\n\n")
                py_errors.write(b"int _mysql_constants_add_err(PyObject* module) {\n")
                for line in mysqld_errors:
                    if not line.startswith(b'#define'):
                        continue
                    name = line.split()[1]
                    py_errors.write(b"    if (PyModule_AddIntMacro(module, " + name + b") < 0) return -1;\n")
                py_errors.write(b"    return 0;\n")
                py_errors.write(b"}\n")


MODULE_NAME = "_websql"

module1 = Extension(MODULE_NAME,
                    sources=["./src/connections.c",
                             "./src/constants.c",
                             "./src/exceptions.c",
                             "./src/fields.c",
                             "./src/format.c",
                             "./src/mysqlmod.c",
                             "./src/results.c"],
                    libraries=['ssl', 'crypto'],
                    extra_compile_args=["-Os", "-g", "-fno-strict-aliasing"],
                    define_macros=[
                        ("HAVE_ASYNCIO", 1),
                        ("MODULE_NAME", MODULE_NAME),
                        ("version_info", "(2, 1, 0, 'beta', 0)"),
                        ("__version__", "2.1.0")
                    ])

setup(
    ext_modules=[module1],
    py_modules=[
        "websql._types",
        "websql.connections",
        "websql.converters",
        "websql.cursors",
        "websql.release",
        "websql.times"
    ],
    cmdclass={'build_ext': BuildWebSQL})
